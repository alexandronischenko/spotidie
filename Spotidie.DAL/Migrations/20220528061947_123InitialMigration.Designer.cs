// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spotidie.DAL.EF;

#nullable disable

namespace Spotidie.DAL.Migrations
{
    [DbContext(typeof(SpotidieContext))]
    [Migration("20220528061947_123InitialMigration")]
    partial class _123InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.EF.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorAvatar")
                        .HasColumnType("text");

                    b.Property<int>("AuthorForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("AuthorName")
                        .HasColumnType("text");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("e68ac013-5ce5-47d6-8afa-0c7b59a69abc"),
                            AuthorAvatar = "https://miro.medium.com/max/1400/1*NhL0RhtXr4tYhYExPyHW4g.jpeg",
                            AuthorForeignKey = 3,
                            AuthorName = "Awolnation"
                        },
                        new
                        {
                            AuthorId = new Guid("9c2c7354-8740-4e2c-9ff9-fa560d1d4a5e"),
                            AuthorAvatar = "http://sun9-10.userapi.com/s/v1/if1/CSawlnOoYN9CC6IgDfCSUjqvluyGA9KqvJ8ujexQy5KVmJw5mxnsAxKwBY7o8mazS9svVxf_.jpg?size=604x604&quality=96&type=album",
                            AuthorForeignKey = 1,
                            AuthorName = "Morgenstern"
                        },
                        new
                        {
                            AuthorId = new Guid("62955e1e-51ee-4d60-928b-0f73d103b3f9"),
                            AuthorAvatar = "https://i.scdn.co/image/ab6761610000e5ebf5c9cb7c03d1e4e5226fc232",
                            AuthorForeignKey = 4,
                            AuthorName = "Баста"
                        },
                        new
                        {
                            AuthorId = new Guid("113a93d1-38df-4763-b548-f0521bbc998c"),
                            AuthorAvatar = "https://upload.wikimedia.org/wikipedia/commons/4/40/Michael_Jackson_Dangerous_World_Tour_1993.jpg",
                            AuthorForeignKey = 5,
                            AuthorName = "Michael Jackson"
                        },
                        new
                        {
                            AuthorId = new Guid("4191b441-1ff5-468c-a094-b15ad9fc7b5d"),
                            AuthorAvatar = "https://www.buro247.ua/thumb/670x830_0/images/2020/09/billie-eilish-photos-bodyshaming-01.jpg",
                            AuthorForeignKey = 2,
                            AuthorName = "Billie Eilish"
                        },
                        new
                        {
                            AuthorId = new Guid("74b0dc3b-8079-4846-ba5c-8ace7459ed0a"),
                            AuthorAvatar = "https://i.ytimg.com/vi/3UF96jzrX4o/hqdefault.jpg",
                            AuthorForeignKey = 6,
                            AuthorName = "Your Favourite Music"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Property<Guid>("MainUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MainUserAvatar")
                        .HasColumnType("text");

                    b.Property<string>("MainUserEmail")
                        .HasColumnType("text");

                    b.Property<int>("MainUserForeignKey")
                        .HasColumnType("integer");

                    b.Property<bool>("MainUserIsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("MainUserIsPremium")
                        .HasColumnType("boolean");

                    b.Property<string>("MainUserName")
                        .HasColumnType("text");

                    b.Property<string>("MainUserPassword")
                        .HasColumnType("text");

                    b.HasKey("MainUserId");

                    b.ToTable("MainUsers");

                    b.HasData(
                        new
                        {
                            MainUserId = new Guid("03324ff7-f23d-43c0-8c51-366b4bda6957"),
                            MainUserAvatar = "https://i.ytimg.com/vi/3UF96jzrX4o/hqdefault.jpg",
                            MainUserEmail = "test5@mail.ru",
                            MainUserForeignKey = 6,
                            MainUserIsAdmin = true,
                            MainUserIsPremium = true,
                            MainUserName = "test1",
                            MainUserPassword = "Qwerty123?"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Property<Guid>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MainUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlaylistAvatar")
                        .HasColumnType("text");

                    b.Property<int>("PlaylistForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("text");

                    b.HasKey("PlaylistId");

                    b.HasIndex("MainUserId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            PlaylistId = new Guid("1c1a2f2c-546f-4501-8204-41bef39e9f13"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 1,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("89d94f53-01a3-40f1-ba87-6c9b8a23752e"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 3,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("5173e421-27c7-4d82-a16e-27df14c7933b"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 4,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("482c931c-51db-4b0e-b318-eec5876e4e6c"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 5,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("ff4d5cd8-2f8f-4904-aeda-2f54d10ca03d"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 2,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("0914a7d1-c705-4c3d-a77f-b9f70d9566c2"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 2,
                            PlaylistName = "dont smile at me"
                        },
                        new
                        {
                            PlaylistId = new Guid("08fc300f-c02c-4bdf-8597-d915d8b2e4f7"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("0a457a5a-e935-4d39-8784-434fb7bb4ff4"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("159fc675-c72d-4564-a5eb-25c80aac4348"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("47a43edf-7867-4472-8138-50ad06d7bf5d"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("bf966b0a-2b07-4df6-b09f-449772882931"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("363dd9c1-0448-40fe-97cc-262a166140e9"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "dont smile at me"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.Property<Guid>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uuid");

                    b.Property<string>("TrackAvatar")
                        .HasColumnType("text");

                    b.Property<string>("TrackData")
                        .HasColumnType("text");

                    b.Property<int>("TrackDuration")
                        .HasColumnType("integer");

                    b.Property<int>("TrackForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("TrackName")
                        .HasColumnType("text");

                    b.HasKey("TrackId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            TrackId = new Guid("4ed4a318-930d-40cc-a859-ab4244e376ce"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 1,
                            TrackName = "Timerhan"
                        },
                        new
                        {
                            TrackId = new Guid("74bbbe09-a81a-41eb-b18b-0076d4acf6dd"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 1,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("26b5bb77-4181-4188-a180-510f3f5a65f4"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 1,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("7db76519-bd85-4a43-8f58-8b4db80f9df5"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 2,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("89308b58-c5f7-4089-84fa-6b9cff871185"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 2,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("7e5fb039-7deb-49a2-991f-11ec9bba53a7"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 2,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("56faa806-5e46-4e66-bc34-4daf1489c0cd"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 2,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("91430730-419b-4fdd-bd3a-d0597c3b5de3"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 2,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("58b4a821-ccfd-4ee4-9dd8-b840127f422d"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 2,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("cef46fbb-071d-4129-85df-b2a242f4057e"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 2,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("11b62786-545b-4e8b-9530-578d4d5357a4"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 3,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("3e15dadb-adf2-4605-8f5a-23dff6134bac"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 3,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("619f70f4-cd88-468d-9d14-4d4841f11126"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("199cae62-1986-4bb8-a55e-d1e511adf2b4"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 4,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("ba0040eb-3ae1-4393-8650-fad25d29bd70"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 4,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("df2ef618-dfe0-40a8-9a53-81719518a9d5"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 5,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("abdb2d10-2894-4b52-a9cf-9f43274cc703"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 5,
                            TrackName = "Beat It"
                        },
                        new
                        {
                            TrackId = new Guid("62c28ba3-474d-4120-ab65-41a3c0da3e40"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 6,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("a2b60993-16bf-4abd-8b4a-4f2a703b1879"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 6,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("774f842e-c398-4876-811c-826f7fad62b5"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 6,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("1d622d9a-b4cd-4ba3-b10c-c1aa9b33ca09"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 6,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("549933d2-6da4-4fef-af91-3808c2b0fef3"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 6,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("5e6ba477-61d3-40c5-b712-d76891b505be"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 6,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("e9bd6db1-ab89-4e91-b7f8-36163d6b978f"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 6,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("fb92f7b5-5de4-4c73-aed8-52175b850027"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 6,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("ffff9dad-a2ab-4729-a090-a1461fdfaa16"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 6,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("c0828151-8ac1-441b-bfd7-c79b2912cb41"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 6,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("f804abad-a8eb-459e-9725-07f80f93c3f6"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 6,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("8e7a0044-2575-435d-b617-3b75fac88e31"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("b46db2c6-d4df-409e-ae9a-46b4fa7f2c39"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 6,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("6f894abe-9127-42fb-9e1d-59d8029e9566"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 6,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("a7a7c376-4232-4e6a-bf3c-8dab5d50acff"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 6,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("5d87cf24-ea65-4717-bc03-16c3a81b9486"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 6,
                            TrackName = "Beat It"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.MainUser", null)
                        .WithMany("Playlists")
                        .HasForeignKey("MainUserId");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Spotidie.DAL.Entities.Playlist", "Playlist")
                        .WithMany("Track")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Author");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Navigation("Track");
                });
#pragma warning restore 612, 618
        }
    }
}

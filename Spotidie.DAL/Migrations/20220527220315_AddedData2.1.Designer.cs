// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spotidie.DAL.EF;

#nullable disable

namespace Spotidie.DAL.Migrations
{
    [DbContext(typeof(SpotidieContext))]
    [Migration("20220527220315_AddedData2.1")]
    partial class AddedData21
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.EF.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorAvatar")
                        .HasColumnType("text");

                    b.Property<int>("AuthorForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("AuthorName")
                        .HasColumnType("text");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("5cfaabf2-eb6a-4f06-b5c9-8c2a0f8b49d6"),
                            AuthorAvatar = "https://miro.medium.com/max/1400/1*NhL0RhtXr4tYhYExPyHW4g.jpeg",
                            AuthorForeignKey = 3,
                            AuthorName = "Awolnation"
                        },
                        new
                        {
                            AuthorId = new Guid("085b3d32-7462-49c1-aec3-76f66c466dee"),
                            AuthorAvatar = "http://sun9-10.userapi.com/s/v1/if1/CSawlnOoYN9CC6IgDfCSUjqvluyGA9KqvJ8ujexQy5KVmJw5mxnsAxKwBY7o8mazS9svVxf_.jpg?size=604x604&quality=96&type=album",
                            AuthorForeignKey = 1,
                            AuthorName = "Morgenstern"
                        },
                        new
                        {
                            AuthorId = new Guid("139179a6-ffe0-484a-92d1-d67a939f6f3a"),
                            AuthorAvatar = "https://i.scdn.co/image/ab6761610000e5ebf5c9cb7c03d1e4e5226fc232",
                            AuthorForeignKey = 4,
                            AuthorName = "Баста"
                        },
                        new
                        {
                            AuthorId = new Guid("1a042c70-f725-4142-98e8-7bb3b2c69dc9"),
                            AuthorAvatar = "https://upload.wikimedia.org/wikipedia/commons/4/40/Michael_Jackson_Dangerous_World_Tour_1993.jpg",
                            AuthorForeignKey = 5,
                            AuthorName = "Michael Jackson"
                        },
                        new
                        {
                            AuthorId = new Guid("61abd222-ce59-4575-8fb7-204432bb5d9e"),
                            AuthorAvatar = "https://www.buro247.ua/thumb/670x830_0/images/2020/09/billie-eilish-photos-bodyshaming-01.jpg",
                            AuthorForeignKey = 2,
                            AuthorName = "Billie Eilish"
                        },
                        new
                        {
                            AuthorId = new Guid("2bd905cb-97e4-43db-8eae-4ff7212d93f6"),
                            AuthorAvatar = "https://sun9-22.userapi.com/s/v1/if1/CSm8zW35urd67tfqeWMkGkJsxa0yobAc4rC3_O6Yh4hRi4PJpzyBeU64yDdrZz6P_KYmAD8v.jpg?size=604x453&quality=96&type=album",
                            AuthorForeignKey = 6,
                            AuthorName = "Your Favourite Music"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Property<Guid>("MainUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MainUserAvatar")
                        .HasColumnType("text");

                    b.Property<string>("MainUserEmail")
                        .HasColumnType("text");

                    b.Property<int>("MainUserForeignKey")
                        .HasColumnType("integer");

                    b.Property<bool>("MainUserIsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("MainUserIsPremium")
                        .HasColumnType("boolean");

                    b.Property<string>("MainUserName")
                        .HasColumnType("text");

                    b.Property<string>("MainUserPassword")
                        .HasColumnType("text");

                    b.HasKey("MainUserId");

                    b.ToTable("MainUsers");

                    b.HasData(
                        new
                        {
                            MainUserId = new Guid("cd6f1f54-8ee4-4f22-92ef-cc62de87cb47"),
                            MainUserAvatar = "https://i.ytimg.com/vi/3UF96jzrX4o/hqdefault.jpg",
                            MainUserEmail = "test5@mail.ru",
                            MainUserForeignKey = 6,
                            MainUserIsAdmin = true,
                            MainUserIsPremium = true,
                            MainUserName = "test1",
                            MainUserPassword = "Qwerty123?"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Property<Guid>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MainUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlaylistAvatar")
                        .HasColumnType("text");

                    b.Property<int>("PlaylistForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("text");

                    b.HasKey("PlaylistId");

                    b.HasIndex("MainUserId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            PlaylistId = new Guid("76536318-44f8-4d71-b3cc-f81a9eba4ef0"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 1,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("cc5d685a-65b6-4a03-834b-fc2379cc04d7"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 3,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("6db5f9b1-1c33-48c4-8fca-87cda63681e2"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 4,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("18bc09c4-88b2-490b-b7e5-df40d8484ac2"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 5,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("49d062cd-a530-42cb-801f-b67e56b3ca8a"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 2,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("f434eb04-8ce4-40d3-af35-600982ce6657"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 2,
                            PlaylistName = "dont smile at me"
                        },
                        new
                        {
                            PlaylistId = new Guid("6dd9deee-b9d8-4fe0-af6a-7d9b88354de6"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("adc221bf-b735-4f8e-a71f-74defeca6581"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("39944eaf-f284-49d1-8188-35d579ef2797"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("1bffc002-7263-4c55-93d9-c0ed2b13168d"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("b1777146-4690-4df5-ba43-2206dd50bd4d"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("8bab1d58-fc3c-4692-abac-05f5df5f5bb5"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "dont smile at me"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.Property<Guid>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uuid");

                    b.Property<string>("TrackAvatar")
                        .HasColumnType("text");

                    b.Property<string>("TrackData")
                        .HasColumnType("text");

                    b.Property<int>("TrackDuration")
                        .HasColumnType("integer");

                    b.Property<int>("TrackForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("TrackName")
                        .HasColumnType("text");

                    b.HasKey("TrackId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            TrackId = new Guid("a27e8c6f-b692-4ff0-a78a-0688ef53d24f"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 1,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("a4acbc76-5128-4bf4-b6ea-07c6da27173e"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 1,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("e573064f-8180-4a72-abda-ac695dd7fd69"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 2,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("18b2b0c8-aa43-4004-92dd-4c89f6918308"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 2,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("82ab0ac3-bc59-4a27-b236-0625be526c78"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 2,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("869c7300-7f1e-4633-9be5-8e4e7ad1f07b"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 2,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("aa1f14b7-0516-4e68-a6df-a344653bbb6e"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 2,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("d63c8cf4-67d3-49d8-b6a0-7ecb14d24ce8"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 2,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("8861fd6e-af9b-4bfe-8051-85589e9be573"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 2,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("fa5b6602-35a9-41c8-8e7d-fbbe2036e69d"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 3,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("4e62db82-eb53-4d91-b0fa-b539b7ea7a2d"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 3,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("27267685-2326-4ffd-bc37-818d30fa3a22"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("13679f91-c84a-4091-86f9-d66ada36d2ee"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 4,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("23553c20-3ee9-480a-8027-ca121faa9b65"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 4,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("4ebe2fc4-5930-4dd1-a3c6-d41324a2fa67"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 5,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("5b1f3b71-c277-463a-a08c-5832212c095e"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 5,
                            TrackName = "Beat It"
                        },
                        new
                        {
                            TrackId = new Guid("b7d2b305-cc03-41f9-86d7-ea25586a1173"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 6,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("e5e7469c-9554-456e-9f25-7a147bef6cc4"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 6,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("6022e362-fc06-420f-9d47-ae6dd9baa45a"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 6,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("0030e945-e3f0-4192-b1e3-fac41c982aee"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 6,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("ec3ff423-01bb-43b3-9421-71c7f1e5a531"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 6,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("a5d17575-d97a-470a-967b-b23d8215f413"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 6,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("fd56618a-1e4e-46e1-9a38-e9057a2af8ec"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 6,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("53bd0b36-b237-4055-81b0-4c5e754f2d0f"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 6,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("8d04e219-c540-4029-85ae-67057084e103"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 6,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("c7e005aa-965c-4791-b9bc-db8fba241e33"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 6,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("3bc007d5-51f3-4236-be30-c6bcbe2f2722"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 6,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("de68f4ad-e4e7-418b-9bf3-a1978313ecaf"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("e84fffe6-5617-4f48-b77a-8424bb1d7f55"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 6,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("a5cd66fb-af2e-490e-8591-9b41254ceb67"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 6,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("2572ebf2-2f32-421c-8a90-153a4650e7fe"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 6,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("4994bb7b-344c-4fa6-8c52-c9250efdd972"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 6,
                            TrackName = "Beat It"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.MainUser", null)
                        .WithMany("Playlists")
                        .HasForeignKey("MainUserId");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Spotidie.DAL.Entities.Playlist", "Playlist")
                        .WithMany("Track")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Author");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Navigation("Track");
                });
#pragma warning restore 612, 618
        }
    }
}

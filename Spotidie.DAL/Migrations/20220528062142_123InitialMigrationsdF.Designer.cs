// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spotidie.DAL.EF;

#nullable disable

namespace Spotidie.DAL.Migrations
{
    [DbContext(typeof(SpotidieContext))]
    [Migration("20220528062142_123InitialMigrationsdF")]
    partial class _123InitialMigrationsdF
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.EF.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorAvatar")
                        .HasColumnType("text");

                    b.Property<int>("AuthorForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("AuthorName")
                        .HasColumnType("text");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("aad8d97f-2ca3-4c93-bc3a-c14660ceecad"),
                            AuthorAvatar = "https://miro.medium.com/max/1400/1*NhL0RhtXr4tYhYExPyHW4g.jpeg",
                            AuthorForeignKey = 3,
                            AuthorName = "Awolnation"
                        },
                        new
                        {
                            AuthorId = new Guid("11f08f47-5fe4-4888-84ab-9aa674ac14d7"),
                            AuthorAvatar = "http://sun9-10.userapi.com/s/v1/if1/CSawlnOoYN9CC6IgDfCSUjqvluyGA9KqvJ8ujexQy5KVmJw5mxnsAxKwBY7o8mazS9svVxf_.jpg?size=604x604&quality=96&type=album",
                            AuthorForeignKey = 1,
                            AuthorName = "Morgenstern"
                        },
                        new
                        {
                            AuthorId = new Guid("da4c0aa0-221e-42da-baa1-9b7fcf2b1b80"),
                            AuthorAvatar = "https://i.scdn.co/image/ab6761610000e5ebf5c9cb7c03d1e4e5226fc232",
                            AuthorForeignKey = 4,
                            AuthorName = "Баста"
                        },
                        new
                        {
                            AuthorId = new Guid("7f3a3f3b-da32-4ac0-91da-a02f0cc28b64"),
                            AuthorAvatar = "https://upload.wikimedia.org/wikipedia/commons/4/40/Michael_Jackson_Dangerous_World_Tour_1993.jpg",
                            AuthorForeignKey = 5,
                            AuthorName = "Michael Jackson"
                        },
                        new
                        {
                            AuthorId = new Guid("cbff566e-0bd4-4b8a-8136-8685d38ade1c"),
                            AuthorAvatar = "https://www.buro247.ua/thumb/670x830_0/images/2020/09/billie-eilish-photos-bodyshaming-01.jpg",
                            AuthorForeignKey = 2,
                            AuthorName = "Billie Eilish"
                        },
                        new
                        {
                            AuthorId = new Guid("6b3c9e14-26ec-41d7-9dce-a060778cc8da"),
                            AuthorAvatar = "https://i.ytimg.com/vi/3UF96jzrX4o/hqdefault.jpg",
                            AuthorForeignKey = 6,
                            AuthorName = "Your Favourite Music"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Property<Guid>("MainUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MainUserAvatar")
                        .HasColumnType("text");

                    b.Property<string>("MainUserEmail")
                        .HasColumnType("text");

                    b.Property<int>("MainUserForeignKey")
                        .HasColumnType("integer");

                    b.Property<bool>("MainUserIsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("MainUserIsPremium")
                        .HasColumnType("boolean");

                    b.Property<string>("MainUserName")
                        .HasColumnType("text");

                    b.Property<string>("MainUserPassword")
                        .HasColumnType("text");

                    b.HasKey("MainUserId");

                    b.ToTable("MainUsers");

                    b.HasData(
                        new
                        {
                            MainUserId = new Guid("45b8c5c7-e4d7-46a7-9860-ba83e1f54896"),
                            MainUserAvatar = "https://i.ytimg.com/vi/3UF96jzrX4o/hqdefault.jpg",
                            MainUserEmail = "test5@mail.ru",
                            MainUserForeignKey = 6,
                            MainUserIsAdmin = true,
                            MainUserIsPremium = true,
                            MainUserName = "test1",
                            MainUserPassword = "Qwerty123?"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Property<Guid>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MainUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlaylistAvatar")
                        .HasColumnType("text");

                    b.Property<int>("PlaylistForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("text");

                    b.HasKey("PlaylistId");

                    b.HasIndex("MainUserId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            PlaylistId = new Guid("8e31768b-fc0c-490c-b4e0-582cf31498b3"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 1,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("aed0147f-9f92-4fe2-ac1b-a6ec19a3dd92"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 3,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("bda24790-403f-4347-8514-27f0402db23e"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 4,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("ccd54c32-14f0-4b36-a100-8f3fab676e64"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 5,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("479d38ce-0e2a-4232-a61e-09b5716ba138"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 2,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("90bef63a-22f6-4129-b42b-10944ba175aa"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 2,
                            PlaylistName = "dont smile at me"
                        },
                        new
                        {
                            PlaylistId = new Guid("6882a1ed-2f53-4bc5-b493-8f7b3c1b793b"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO0vvwas-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is MORGENSTERN"
                        },
                        new
                        {
                            PlaylistId = new Guid("0c7b32f4-c963-4c8f-a996-32607b7e703b"),
                            PlaylistAvatar = "https://is5-ssl.mzstatic.com/image/thumb/Music124/v4/19/97/5e/19975ec4-e9a5-0e07-0600-8592238a1765/849320046806.png/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "Angel Miners & the Lightning Riders"
                        },
                        new
                        {
                            PlaylistId = new Guid("2d45c52a-0f23-405e-af13-12ebadc472df"),
                            PlaylistAvatar = "https://thisis-images.scdn.co/37i9dQZF1DZ06evO4eXcRP-large.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This is Basta"
                        },
                        new
                        {
                            PlaylistId = new Guid("dcae0f06-1474-4880-9a2e-81b31dc2ceb6"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f00000003e8e28219724c2423afa4d320",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Michael Jackson"
                        },
                        new
                        {
                            PlaylistId = new Guid("bbd9752e-d26a-445d-b474-9f0aced9cca6"),
                            PlaylistAvatar = "https://i.scdn.co/image/ab67706f000000034d26d431869cabfc53c67d8e",
                            PlaylistForeignKey = 6,
                            PlaylistName = "This Is Billie Eilish"
                        },
                        new
                        {
                            PlaylistId = new Guid("3a06bf5f-23ab-47d1-97f4-86cbab790a8b"),
                            PlaylistAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            PlaylistForeignKey = 6,
                            PlaylistName = "dont smile at me"
                        });
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.Property<Guid>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uuid");

                    b.Property<string>("TrackAvatar")
                        .HasColumnType("text");

                    b.Property<string>("TrackData")
                        .HasColumnType("text");

                    b.Property<int>("TrackDuration")
                        .HasColumnType("integer");

                    b.Property<int>("TrackForeignKey")
                        .HasColumnType("integer");

                    b.Property<string>("TrackName")
                        .HasColumnType("text");

                    b.HasKey("TrackId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            TrackId = new Guid("d2b39755-4a53-4717-a878-db3a248ef910"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 1,
                            TrackName = "Timerhan"
                        },
                        new
                        {
                            TrackId = new Guid("0227ad16-d393-4d7c-a9d5-bea29b5e274c"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 1,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("e735cd94-0402-4b35-a69b-03575cc4c66b"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 1,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("022fcebc-4a7d-48a0-88e7-29e7fa9e0c1a"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 2,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("5bd8322f-3cc9-4f76-bd5f-c38f10556879"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 2,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("8a9f362b-4661-487b-8fc0-828d891e4cf2"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 2,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("3e181247-1b40-4b61-a35e-37a0bf2fec0c"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 2,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("61c91065-f631-4120-bebd-04321999fcfc"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 2,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("b5760bc7-e610-47a0-ae66-7ed3f402cf41"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 2,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("96e5be83-7fa0-4c21-b959-f8a2878db03d"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 2,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("ecefae97-db45-4ea9-978d-3fcefc3d221e"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 3,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("c8d6f25a-bca0-4d31-8f0b-22752b52f6d2"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 3,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("07f5af67-04b9-4c9a-83c2-655b2921f345"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("ba25151a-8eb6-40db-8b2c-2897623cafed"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 4,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("cd62a5cb-36f6-47b7-8e8b-00d6471481c9"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 4,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("2be71124-8133-45ad-9b96-1f70a9fb14ca"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 5,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("0f7e4663-97bc-4a9d-b2eb-7d6a917529c0"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 5,
                            TrackName = "Beat It"
                        },
                        new
                        {
                            TrackId = new Guid("e52f7bba-7971-4f0b-a295-ceeb66ed2a4f"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/4/49/Cadillac_%28%D0%BF%D0%B5%D1%81%D0%BD%D1%8F%29.jpg",
                            TrackData = "https://open.spotify.com/track/3aVNCtmLR9BSgFALSySejF?si=c4bac8e332144863",
                            TrackDuration = 177,
                            TrackForeignKey = 6,
                            TrackName = "Cadillac"
                        },
                        new
                        {
                            TrackId = new Guid("a0280572-4490-4824-a3eb-3b77bb659b34"),
                            TrackAvatar = "https://i.ytimg.com/vi/zdUIpi3WC5s/maxresdefault.jpg",
                            TrackData = "https://open.spotify.com/track/3SOHFsSinxM6flLceYl5BT?si=9a73e3a45760441c",
                            TrackDuration = 160,
                            TrackForeignKey = 6,
                            TrackName = "Селяви"
                        },
                        new
                        {
                            TrackId = new Guid("5f464b32-e68a-45c6-a278-22d8c4308665"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/0UJAH9v2PmS7sBcuBquprR?si=2fc802a0d83c4470",
                            TrackDuration = 210,
                            TrackForeignKey = 6,
                            TrackName = "Oxytocin"
                        },
                        new
                        {
                            TrackId = new Guid("9efcccba-d73a-46d8-8abb-8929d603cb59"),
                            TrackAvatar = "https://spiritofrock.ru/wp-content/uploads/2021/10/Billie-Eilish-Happier-Than-Ever-Tour-1000x600-1.jpg",
                            TrackData = "https://open.spotify.com/track/4RVwu0g32PAqgUiJoXsdF8?si=62abafa4e4da4f89",
                            TrackDuration = 298,
                            TrackForeignKey = 6,
                            TrackName = "Happier Than Ever"
                        },
                        new
                        {
                            TrackId = new Guid("89dcef8f-8fa4-4d51-9a3d-8236a411aadc"),
                            TrackAvatar = "https://lastfm.freetls.fastly.net/i/u/ar0/8bccd9c4336ffdbe502671287bc1b85c.jpg",
                            TrackData = "https://open.spotify.com/track/04sN26COy28wTXYj3dMoiZ?si=bccdf3f86317456c",
                            TrackDuration = 180,
                            TrackForeignKey = 6,
                            TrackName = "Bored"
                        },
                        new
                        {
                            TrackId = new Guid("103cf2cd-e55d-4889-922c-069c0e0d0414"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1ni8ZTAY1GHXEFOGHl7fdg?si=e6e975f1853f4cf8",
                            TrackDuration = 179,
                            TrackForeignKey = 6,
                            TrackName = "bellyache"
                        },
                        new
                        {
                            TrackId = new Guid("c715dad5-9c3a-4d7a-9901-f07f9b5c2b05"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/1RGasjWLZ4qMN7wbtkLa3u?si=b955ab8d8f994ad2",
                            TrackDuration = 170,
                            TrackForeignKey = 6,
                            TrackName = "my boy"
                        },
                        new
                        {
                            TrackId = new Guid("f7b76888-7307-4060-8599-e76cd1856908"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/41zXlQxzTi6cGAjpOXyLYH?si=124307b3504340d4",
                            TrackDuration = 203,
                            TrackForeignKey = 6,
                            TrackName = "idontwannabeyouanymore"
                        },
                        new
                        {
                            TrackId = new Guid("1e141e8d-e1e6-4bdf-92de-fd5f35a35cd3"),
                            TrackAvatar = "https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/02/1d/30/021d3036-5503-3ed3-df00-882f2833a6ae/17UM1IM17026.rgb.jpg/1200x1200bf-60.jpg",
                            TrackData = "https://open.spotify.com/track/5w7wuzMzsDer96KqxafeRK?si=5c7991a726b34496",
                            TrackDuration = 194,
                            TrackForeignKey = 6,
                            TrackName = "COPYCAT"
                        },
                        new
                        {
                            TrackId = new Guid("2daba720-b004-4db5-b144-44e018d32f6a"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/1t4wa5r7E7oZ2D4G07JFsI?si=da1d6a276fa44643",
                            TrackDuration = 223,
                            TrackForeignKey = 6,
                            TrackName = "The Best"
                        },
                        new
                        {
                            TrackId = new Guid("c10ada98-331a-4683-b1c4-2312578ed926"),
                            TrackAvatar = "https://i.scdn.co/image/ab67616d0000b27351cbdc2b8a04d0195dd4ab37",
                            TrackData = "https://open.spotify.com/track/7qVsMCptRS8tf4eIsQVHYR?si=4fee5f08375049a1",
                            TrackDuration = 288,
                            TrackForeignKey = 6,
                            TrackName = "Slam"
                        },
                        new
                        {
                            TrackId = new Guid("0752a91e-06e6-479a-8e39-adbdd733c0c3"),
                            TrackAvatar = "https://nemcd.com/wp-content/uploads/2015/07/Basta-Urban.jpg",
                            TrackData = "https://open.spotify.com/track/40FJaSjTBdsIJ0upyx4Vjn?si=4fcc0c1805374334",
                            TrackDuration = 252,
                            TrackForeignKey = 4,
                            TrackName = "Урбан"
                        },
                        new
                        {
                            TrackId = new Guid("72673703-115e-4d34-a36f-a2b2c9008b5b"),
                            TrackAvatar = "https://the-flow.ru/uploads/images/resize/830x0/adaptiveResize/12/47/06/27/20/5b906d740cd7.jpg",
                            TrackData = "https://open.spotify.com/track/5ISgcj2vuSrL3FjHHnDPZU?si=bdf8fba16d764a66",
                            TrackDuration = 118,
                            TrackForeignKey = 6,
                            TrackName = "Ты была права"
                        },
                        new
                        {
                            TrackId = new Guid("4f7ff5b9-77a0-4f0e-a9c7-873a161b8bbb"),
                            TrackAvatar = "https://lifemusic.kz/uploads/posts/2020-08/thumbs/1597593257_basta-zivert-ne-bolei.jpg",
                            TrackData = "https://open.spotify.com/track/6xBifM893zgSssatuI6YAf?si=f3abc4ff03074447",
                            TrackDuration = 334,
                            TrackForeignKey = 6,
                            TrackName = "неболей"
                        },
                        new
                        {
                            TrackId = new Guid("48200435-113d-43de-b4a6-b4d871a1e255"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/5ChkMS8OtdzJeqyybCc9R5?si=452685936d3646e0",
                            TrackDuration = 233,
                            TrackForeignKey = 6,
                            TrackName = "Billie Jean"
                        },
                        new
                        {
                            TrackId = new Guid("34585709-e59a-42b4-a954-b1f8976b613e"),
                            TrackAvatar = "https://upload.wikimedia.org/wikipedia/ru/0/0e/Billie_Jean.jpg",
                            TrackData = "https://open.spotify.com/track/1OOtq8tRnDM8kG2gqUPjAj?si=04a0f63ce0394c8c",
                            TrackDuration = 258,
                            TrackForeignKey = 6,
                            TrackName = "Beat It"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Spotidie.DAL.EF.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.MainUser", null)
                        .WithMany("Playlists")
                        .HasForeignKey("MainUserId");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Track", b =>
                {
                    b.HasOne("Spotidie.DAL.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Spotidie.DAL.Entities.Playlist", "Playlist")
                        .WithMany("Track")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Author");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.MainUser", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Spotidie.DAL.Entities.Playlist", b =>
                {
                    b.Navigation("Track");
                });
#pragma warning restore 612, 618
        }
    }
}
